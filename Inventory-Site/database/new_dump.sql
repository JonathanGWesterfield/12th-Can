PRAGMA foreign_keys=OFF;
BEGIN TRANSACTION;
CREATE TABLE IF NOT EXISTS "migrations" ("id" integer not null primary key autoincrement, "migration" varchar not null, "batch" integer not null);
INSERT INTO migrations VALUES(1,'2014_10_12_000000_create_users_table',1);
INSERT INTO migrations VALUES(2,'2014_10_12_100000_create_password_resets_table',1);
INSERT INTO migrations VALUES(3,'2019_08_19_000000_create_failed_jobs_table',1);
INSERT INTO migrations VALUES(4,'2019_09_30_012030_create_item_table',1);
INSERT INTO migrations VALUES(5,'2019_09_30_012614_create__member__position_table',1);
INSERT INTO migrations VALUES(6,'2019_09_30_013102_create__order__transaction_table',1);
CREATE TABLE IF NOT EXISTS "User" ("id" integer not null primary key autoincrement, "name" varchar not null, "email" varchar not null, "email_verified_at" datetime null, "password" varchar not null, "remember_token" varchar null, "created_at" datetime not null, "updated_at" datetime default CURRENT_TIMESTAMP not null, "phone_num" varchar not null, "current_member" tinyint(1) not null, "position_id" integer not null, foreign key("position_id") references "Member_Position"("id"));
CREATE TABLE IF NOT EXISTS "password_resets" ("email" varchar not null, "token" varchar not null, "created_at" datetime null);
CREATE TABLE IF NOT EXISTS "failed_jobs" ("id" integer not null primary key autoincrement, "connection" text not null, "queue" text not null, "payload" text not null, "exception" text not null, "failed_at" datetime default CURRENT_TIMESTAMP not null);
CREATE TABLE IF NOT EXISTS "Item" ("id" integer not null primary key autoincrement, "name" varchar not null, "quantity" integer not null, "capacity" integer not null, "low_threshold" integer not null, "is_food" tinyint(1) not null, "refrigerated" tinyint(1) not null, "removed" tinyint(1) not null, "created_at" datetime not null, "updated_at" datetime default CURRENT_TIMESTAMP not null);
CREATE TABLE IF NOT EXISTS "Member_Position" ("id" integer not null primary key autoincrement, "position" varchar not null, "privilege" integer not null, "description" varchar not null, "email" varchar not null, "created_at" datetime not null, "updated_at" datetime default CURRENT_TIMESTAMP not null);
CREATE TABLE IF NOT EXISTS "Order_Transaction" ("id" integer not null primary key autoincrement, "member_id" integer not null, "item_id" integer not null, "item_quantity_change" integer not null, "comment" varchar null, "transaction_date" datetime default CURRENT_TIMESTAMP not null, foreign key("member_id") references "User"("id"), foreign key("item_id") references "Item"("id"));
DELETE FROM sqlite_sequence;
INSERT INTO sqlite_sequence VALUES('migrations',6);
CREATE UNIQUE INDEX "user_email_unique" on "User" ("email");
CREATE INDEX "password_resets_email_index" on "password_resets" ("email");
CREATE UNIQUE INDEX "member_position_email_unique" on "Member_Position" ("email");
COMMIT;
